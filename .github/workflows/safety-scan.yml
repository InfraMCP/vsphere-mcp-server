name: Safety Security Scan

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[security]"
      
      - name: Run Safety CLI to check for vulnerabilities
        uses: pyupio/safety-action@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
      
      - name: Run Safety CLI for PR report
        if: github.event_name == 'pull_request'
        run: |
          safety check --json > safety-report.json || true
        
      - name: Comment on PR with safety findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            let comment = '## üîí Safety Security Scan Results\n\n';
            
            try {
              const safetyData = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
              if (safetyData.length > 0) {
                comment += `‚ùå **${safetyData.length} security vulnerabilities found:**\n\n`;
                safetyData.forEach(vuln => {
                  comment += `- **${vuln.package_name}** v${vuln.installed_version}: ${vuln.advisory}\n`;
                });
                comment += '\n‚ö†Ô∏è **Action Required**: Update vulnerable packages before merging.\n';
              } else {
                comment += '‚úÖ **No known security vulnerabilities found**\n';
              }
            } catch (e) {
              comment += '‚ùì Safety scan results unavailable\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
